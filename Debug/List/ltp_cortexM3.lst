                                - ltp_cortexM3 -                      Page    1

###############################################################################
#                                                                             #
#     IAR Assembler V6.30.1.53127/W32 for ARM 01/Nov/2017  17:53:08           #
#     Copyright 1999-2011 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  E:\STM32\LScan\speex\speex\STM32\libspeex\iar\ltp_cortexM3.s#
#           List file     =  E:\STM32\LScan\Debug\List\ltp_cortexM3.lst       #
#           Object file   =  E:\STM32\LScan\Debug\Obj\ltp_cortexM3.o          #
#           Command line  =  E:\STM32\LScan\speex\speex\STM32\libspeex\iar\ltp_cortexM3.s #
#                            -OE:\STM32\LScan\Debug\Obj\ -s+ -M<> -w+ -r      #
#                            -LE:\STM32\LScan\Debug\List\ -cM -i -B -p80 -t8  #
#                            -xDI2 --cpu Cortex-M4 --fpu VFPv4_sp             #
#                                                                             #
###############################################################################

    1                           /* Copyright (C) 2008 STMicroelectronics, MCD
                                 */

    2                           /*

    3                           

    4                              Redistribution and use in source and binary
                                 forms, with or without

    5                              modification, are permitted provided that
                                 the following conditions

    6                              are met:

    7                              

    8                              - Redistributions of source code must
                                 retain the above copyright

    9                              notice, this list of conditions and the
                                 following disclaimer.

   10                              

   11                              - Redistributions in binary form must
                                 reproduce the above copyright

   12                              notice, this list of conditions and the
                                 following disclaimer in the

   13                              documentation and/or other materials
                                 provided with the distribution.

   14                              

   15                              - Neither the name of the Xiph.org
                                 Foundation nor the names of its

   16                              contributors may be used to endorse or
                                 promote products derived from

   17                              this software without specific prior
                                 written permission.

   18                              

   19                              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
                                 HOLDERS AND CONTRIBUTORS

   20                              ``AS IS'' AND ANY EXPRESS OR IMPLIED
                                 WARRANTIES, INCLUDING, BUT NOT

   21                              LIMITED TO, THE IMPLIED WARRANTIES OF
                                 MERCHANTABILITY AND FITNESS FOR

   22                              A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
                                 EVENT SHALL THE FOUNDATION OR

   23                              CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
                                 INDIRECT, INCIDENTAL, SPECIAL,

   24                              EXEMPLARY, OR CONSEQUENTIAL DAMAGES
                                - ltp_cortexM3 -                      Page    2

                                 (INCLUDING, BUT NOT LIMITED TO,

   25                              PROCUREMENT OF SUBSTITUTE GOODS OR
                                 SERVICES; LOSS OF USE, DATA, OR

   26                              PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
                                 CAUSED AND ON ANY THEORY OF

   27                              LIABILITY, WHETHER IN CONTRACT, STRICT
                                 LIABILITY, OR TORT (INCLUDING

   28                              NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
                                 OUT OF THE USE OF THIS

   29                              SOFTWARE, EVEN IF ADVISED OF THE POSSIBILIT
                                Y OF SUCH DAMAGE.

   30                           */

   31                           

   32                              SECTION .text:CODE(2)

   33                              EXPORT  inner_prod

   34                              

   35                              

   36                           

   37                           #define x       R0    // input array
                                 x[]

   38                           #define c       R1    // input array
                                 c[]

   39                           #define N       R2    // number of samples (a
                                 multiple of 4) // 40 samples: the lpcsize ==
                                 40 for narrowband mode, submode3

   40                           #define acc     R3    // accumulator

   41                           #define sum     R6    // sum

   42                           #define x_0     R4    // elements from array
                                 x[]

   43                           #define x_1     R5

   44                           #define c_0     R7    // elements from array
                                 c[]

   45                           #define c_1     R8

   46                           

   47                           

   48                           

   49                           

   50                           

   51                           inner_prod

   52                           

   53    00000000 2DE9F041          PUSH    {r4-r8, lr}

   54    00000004 4FF00006          MOV     sum, #0

   55                                   

   56                           Loop

   57                                   
                                - ltp_cortexM3 -                      Page    3


   58    00000008 4FF00003          MOV     acc, #0

   59    0000000C 30F9024B          LDRSH   x_0, [x], #2

   60    00000010 31F9027B          LDRSH   c_0, [c], #2

   61    00000014 04FB0733          MLA     acc, x_0, c_0, acc     

   62    00000018 30F9025B          LDRSH   x_1, [x], #2

   63    0000001C 31F9028B          LDRSH   c_1, [c], #2

   64    00000020 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

   65    00000024 30F9024B          LDRSH   x_0, [x], #2

   66    00000028 31F9027B          LDRSH   c_0, [c], #2

   67    0000002C 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

   68    00000030 30F9025B          LDRSH   x_1, [x], #2

   69    00000034 31F9028B          LDRSH   c_1, [c], #2

   70    00000038 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

   71    0000003C 06EBA316          ADD     sum,sum,acc,ASR #6

   72                               

   73    00000040 4FF00003          MOV     acc, #0

   74    00000044 30F9024B          LDRSH   x_0, [x], #2

   75    00000048 31F9027B          LDRSH   c_0, [c], #2

   76    0000004C 04FB0733          MLA     acc, x_0, c_0, acc       

   77    00000050 30F9025B          LDRSH   x_1, [x], #2

   78    00000054 31F9028B          LDRSH   c_1, [c], #2

   79    00000058 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

   80    0000005C 30F9024B          LDRSH   x_0, [x], #2

   81    00000060 31F9027B          LDRSH   c_0, [c], #2

   82    00000064 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

   83    00000068 30F9025B          LDRSH   x_1, [x], #2

   84    0000006C 31F9028B          LDRSH   c_1, [c], #2

   85    00000070 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

   86    00000074 06EBA316          ADD     sum,sum,acc,ASR #6

   87                               

   88    00000078 4FF00003          MOV     acc, #0

   89    0000007C 30F9024B          LDRSH   x_0, [x], #2

   90    00000080 31F9027B          LDRSH   c_0, [c], #2

   91    00000084 04FB0733          MLA     acc, x_0, c_0, acc       

   92    00000088 30F9025B          LDRSH   x_1, [x], #2

   93    0000008C 31F9028B          LDRSH   c_1, [c], #2
                                - ltp_cortexM3 -                      Page    4


   94    00000090 05FB0833          MLA     acc, x_1, c_1, acc       

   95    00000094 30F9024B          LDRSH   x_0, [x], #2

   96    00000098 31F9027B          LDRSH   c_0, [c], #2

   97    0000009C 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

   98    000000A0 30F9025B          LDRSH   x_1, [x], #2

   99    000000A4 31F9028B          LDRSH   c_1, [c], #2

  100    000000A8 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  101    000000AC 06EBA316          ADD     sum,sum,acc,ASR #6

  102                               

  103    000000B0 4FF00003          MOV     acc, #0

  104    000000B4 30F9024B          LDRSH   x_0, [x], #2

  105    000000B8 31F9027B          LDRSH   c_0, [c], #2

  106    000000BC 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  107    000000C0 30F9025B          LDRSH   x_1, [x], #2

  108    000000C4 31F9028B          LDRSH   c_1, [c], #2

  109    000000C8 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  110    000000CC 30F9024B          LDRSH   x_0, [x], #2

  111    000000D0 31F9027B          LDRSH   c_0, [c], #2

  112    000000D4 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  113    000000D8 30F9025B          LDRSH   x_1, [x], #2

  114    000000DC 31F9028B          LDRSH   c_1, [c], #2

  115    000000E0 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  116    000000E4 06EBA316          ADD     sum,sum,acc,ASR #6

  117                               

  118    000000E8 4FF00003          MOV     acc, #0

  119    000000EC 30F9024B          LDRSH   x_0, [x], #2

  120    000000F0 31F9027B          LDRSH   c_0, [c], #2

  121    000000F4 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  122    000000F8 30F9025B          LDRSH   x_1, [x], #2

  123    000000FC 31F9028B          LDRSH   c_1, [c], #2

  124    00000100 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  125    00000104 30F9024B          LDRSH   x_0, [x], #2

  126    00000108 31F9027B          LDRSH   c_0, [c], #2

  127    0000010C 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

                                - ltp_cortexM3 -                      Page    5

  128    00000110 30F9025B          LDRSH   x_1, [x], #2

  129    00000114 31F9028B          LDRSH   c_1, [c], #2

  130    00000118 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  131    0000011C 06EBA316          ADD     sum,sum,acc,ASR #6

  132                               

  133    00000120 4FF00003          MOV     acc, #0

  134    00000124 30F9024B          LDRSH   x_0, [x], #2

  135    00000128 31F9027B          LDRSH   c_0, [c], #2

  136    0000012C 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  137    00000130 30F9025B          LDRSH   x_1, [x], #2

  138    00000134 31F9028B          LDRSH   c_1, [c], #2

  139    00000138 05FB0833          MLA     acc, x_1, c_1, acc       

  140    0000013C 30F9024B          LDRSH   x_0, [x], #2

  141    00000140 31F9027B          LDRSH   c_0, [c], #2

  142    00000144 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  143    00000148 30F9025B          LDRSH   x_1, [x], #2

  144    0000014C 31F9028B          LDRSH   c_1, [c], #2

  145    00000150 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  146    00000154 06EBA316          ADD     sum,sum,acc,ASR #6

  147                               

  148    00000158 4FF00003          MOV     acc, #0

  149    0000015C 30F9024B          LDRSH   x_0, [x], #2

  150    00000160 31F9027B          LDRSH   c_0, [c], #2

  151    00000164 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  152    00000168 30F9025B          LDRSH   x_1, [x], #2

  153    0000016C 31F9028B          LDRSH   c_1, [c], #2

  154    00000170 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  155    00000174 30F9024B          LDRSH   x_0, [x], #2

  156    00000178 31F9027B          LDRSH   c_0, [c], #2

  157    0000017C 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  158    00000180 30F9025B          LDRSH   x_1, [x], #2

  159    00000184 31F9028B          LDRSH   c_1, [c], #2

  160    00000188 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  161    0000018C 06EBA316          ADD     sum,sum,acc,ASR #6

  162                               

                                - ltp_cortexM3 -                      Page    6

  163    00000190 4FF00003          MOV     acc, #0

  164    00000194 30F9024B          LDRSH   x_0, [x], #2

  165    00000198 31F9027B          LDRSH   c_0, [c], #2

  166    0000019C 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  167    000001A0 30F9025B          LDRSH   x_1, [x], #2

  168    000001A4 31F9028B          LDRSH   c_1, [c], #2

  169    000001A8 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  170    000001AC 30F9024B          LDRSH   x_0, [x], #2

  171    000001B0 31F9027B          LDRSH   c_0, [c], #2

  172    000001B4 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  173    000001B8 30F9025B          LDRSH   x_1, [x], #2

  174    000001BC 31F9028B          LDRSH   c_1, [c], #2

  175    000001C0 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  176    000001C4 06EBA316          ADD     sum,sum,acc,ASR #6

  177                               

  178    000001C8 4FF00003          MOV     acc, #0

  179    000001CC 30F9024B          LDRSH   x_0, [x], #2

  180    000001D0 31F9027B          LDRSH   c_0, [c], #2

  181    000001D4 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  182    000001D8 30F9025B          LDRSH   x_1, [x], #2

  183    000001DC 31F9028B          LDRSH   c_1, [c], #2

  184    000001E0 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  185    000001E4 30F9024B          LDRSH   x_0, [x], #2

  186    000001E8 31F9027B          LDRSH   c_0, [c], #2

  187    000001EC 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  188    000001F0 30F9025B          LDRSH   x_1, [x], #2

  189    000001F4 31F9028B          LDRSH   c_1, [c], #2

  190    000001F8 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  191    000001FC 06EBA316          ADD     sum,sum,acc,ASR #6

  192                               

  193    00000200 4FF00003          MOV     acc, #0

  194    00000204 30F9024B          LDRSH   x_0, [x], #2

  195    00000208 31F9027B          LDRSH   c_0, [c], #2

  196    0000020C 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  197    00000210 30F9025B          LDRSH   x_1, [x], #2
                                - ltp_cortexM3 -                      Page    7


  198    00000214 31F9028B          LDRSH   c_1, [c], #2

  199    00000218 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  200    0000021C 30F9024B          LDRSH   x_0, [x], #2

  201    00000220 31F9027B          LDRSH   c_0, [c], #2

  202    00000224 04FB0733          MLA     acc, x_0, c_0, acc       
                                                  

  203    00000228 30F9025B          LDRSH   x_1, [x], #2

  204    0000022C 31F9028B          LDRSH   c_1, [c], #2

  205    00000230 05FB0833          MLA     acc, x_1, c_1, acc       
                                                  

  206    00000234 06EBA316          ADD     sum,sum,acc,ASR #6         
                                                 

  207    00000238 3046              MOV     r0, sum

  208                               

  209    0000023A BDE8F081          POP   {r4-r8, pc}

  210                               END





EOF                  DELIMITER 

\n                   DELIMITER 

                     DELIMITER 

!                    OPERATOR 

!=                   OPERATOR 

%                    OPERATOR 

&                    OPERATOR 

&&                   OPERATOR 

(                    OPERATOR 

(                    DELIMITER 

)                    OPERATOR 

)                    DELIMITER 

*                    OPERATOR 

+                    OPERATOR 

,                    DELIMITER 

-                    OPERATOR 

.                    Target symbol: 24 

/                    OPERATOR 

/                    DELIMITER 

:                    Target symbol: 22 

:                    DELIMITER 

;                    Target symbol: 23 
                                - ltp_cortexM3 -                      Page    8


<                    OPERATOR 

<<                   OPERATOR 

<=                   OPERATOR 

<>                   OPERATOR 

=                    OPERATOR 

=                    DIRECTIVE 

==                   OPERATOR 

>                    OPERATOR 

>=                   OPERATOR 

>>                   OPERATOR 

@                    DELIMITER 

AAPCS                DIRECTIVE 

ALIAS                DIRECTIVE 

ALIGN                DIRECTIVE 

ALIGNRAM             DIRECTIVE 

ALIGNROM             DIRECTIVE 

ANOTE                DIRECTIVE 

APSR_NZCV            REGISTER 

ARGFRAME             DIRECTIVE 

ARM                  DIRECTIVE 

ASEGN                DIRECTIVE 

ASR                  MNEMONIC 

BIT                  SEGMENT TYPE 

BYTE1                OPERATOR 

BYTE2                OPERATOR 

BYTE3                OPERATOR 

BYTE4                OPERATOR 

C0                   REGISTER 

C1                   REGISTER 

C10                  REGISTER 

C11                  REGISTER 

C12                  REGISTER 

C13                  REGISTER 

C14                  REGISTER 

C15                  REGISTER 

C2                   REGISTER 

C3                   REGISTER 

C4                   REGISTER 

C5                   REGISTER 
                                - ltp_cortexM3 -                      Page    9


C6                   REGISTER 

C7                   REGISTER 

C8                   REGISTER 

C9                   REGISTER 

CALL_GRAPH_ROOT      DIRECTIVE 

CASEOFF              DIRECTIVE 

CASEON               DIRECTIVE 

CFI                  DIRECTIVE 

CODE                 SEGMENT TYPE 

CODE                 DIRECTIVE 

CODE16               DIRECTIVE 

CODE32               DIRECTIVE 

COL                  DIRECTIVE 

CONST                SEGMENT TYPE 

D0                   REGISTER 

D1                   REGISTER 

D10                  REGISTER 

D11                  REGISTER 

D12                  REGISTER 

D13                  REGISTER 

D14                  REGISTER 

D15                  REGISTER 

D2                   REGISTER 

D3                   REGISTER 

D4                   REGISTER 

D5                   REGISTER 

D6                   REGISTER 

D7                   REGISTER 

D8                   REGISTER 

D9                   REGISTER 

DATA                 SEGMENT TYPE 

DATA                 DIRECTIVE 

DATE                 OPERATOR 

DC16                 DIRECTIVE 

DC24                 DIRECTIVE 

DC32                 DIRECTIVE 

DC8                  DIRECTIVE 

DCB                  DIRECTIVE 

DCD                  DIRECTIVE 
                                - ltp_cortexM3 -                      Page   10


DCREL32              DIRECTIVE 

DCW                  DIRECTIVE 

DEFINE               DIRECTIVE 

DF32                 DIRECTIVE 

DF64                 DIRECTIVE 

DS16                 DIRECTIVE 

DS24                 DIRECTIVE 

DS32                 DIRECTIVE 

DS8                  DIRECTIVE 

ELSE                 DIRECTIVE 

ELSEIF               DIRECTIVE 

END                  DIRECTIVE 

ENDIF                DIRECTIVE 

ENDM                 DIRECTIVE 

ENDMOD               DIRECTIVE 

ENDR                 DIRECTIVE 

EQU                  DIRECTIVE 

EVEN                 DIRECTIVE 

EXITM                DIRECTIVE 

EXPORT               DIRECTIVE 

EXTERN               DIRECTIVE 

EXTWEAK              DIRECTIVE 

FAR                  SEGMENT TYPE 

FARCODE              SEGMENT TYPE 

FARCONST             SEGMENT TYPE 

FARDATA              SEGMENT TYPE 

FPEXC                REGISTER 

FPINST               REGISTER 

FPINST2              REGISTER 

FPSCR                REGISTER 

FPSID                REGISTER 

FUNCALL              DIRECTIVE 

FUNCTION             DIRECTIVE 

HIGH                 OPERATOR 

HUGE                 SEGMENT TYPE 

HUGECODE             SEGMENT TYPE 

HUGECONST            SEGMENT TYPE 

HUGEDATA             SEGMENT TYPE 

HWRD                 OPERATOR 
                                - ltp_cortexM3 -                      Page   11


IDATA                SEGMENT TYPE 

IF                   DIRECTIVE 

IMPORT               DIRECTIVE 

INCLUDE              DIRECTIVE 

LIBRARY              DIRECTIVE 

LOCAL                DIRECTIVE 

LOCFRAME             DIRECTIVE 

LOW                  OPERATOR 

LR                   REGISTER 

LSL                  MNEMONIC 

LSR                  MNEMONIC 

LSTCND               DIRECTIVE 

LSTCOD               DIRECTIVE 

LSTEXP               DIRECTIVE 

LSTMAC               DIRECTIVE 

LSTOUT               DIRECTIVE 

LSTPAG               DIRECTIVE 

LSTREP               DIRECTIVE 

LSTXRF               DIRECTIVE 

LTORG                DIRECTIVE 

LWRD                 OPERATOR 

MACRO                DIRECTIVE 

MODULE               DIRECTIVE 

MVFR0                REGISTER 

MVFR1                REGISTER 

N                    #define, value: R2, line:        39  

NAME                 DIRECTIVE 

NEAR                 SEGMENT TYPE 

NEARCODE             SEGMENT TYPE 

NEARCONST            SEGMENT TYPE 

NEARDATA             SEGMENT TYPE 

NOALLOC              SEGMENT TYPE 

NOCALL               DIRECTIVE 

NOROOT               SEGMENT TYPE 

NPAGE                SEGMENT TYPE 

ODD                  DIRECTIVE 

P0                   REGISTER 

P1                   REGISTER 

P10                  REGISTER 
                                - ltp_cortexM3 -                      Page   12


P11                  REGISTER 

P12                  REGISTER 

P13                  REGISTER 

P14                  REGISTER 

P15                  REGISTER 

P2                   REGISTER 

P3                   REGISTER 

P4                   REGISTER 

P5                   REGISTER 

P6                   REGISTER 

P7                   REGISTER 

P8                   REGISTER 

P9                   REGISTER 

PAGE                 DIRECTIVE 

PAGSIZ               DIRECTIVE 

PC                   REGISTER 

PRESERVE8            DIRECTIVE 

PROGRAM              DIRECTIVE 

PUBLIC               DIRECTIVE 

PUBWEAK              DIRECTIVE 

R0                   REGISTER 

R1                   REGISTER 

R10                  REGISTER 

R11                  REGISTER 

R12                  REGISTER 

R13                  REGISTER 

R14                  REGISTER 

R15                  REGISTER 

R2                   REGISTER 

R3                   REGISTER 

R4                   REGISTER 

R5                   REGISTER 

R6                   REGISTER 

R7                   REGISTER 

R8                   REGISTER 

R9                   REGISTER 

RADIX                DIRECTIVE 

REGISTER             SEGMENT TYPE 

RELOC_ARM_PREL31     OPERATOR 
                                - ltp_cortexM3 -                      Page   13


RELOC_ARM_TARGET1    OPERATOR 

RELOC_ARM_TARGET2    OPERATOR 

RELOC_LOCAL          OPERATOR 

REORDER              SEGMENT TYPE 

REPT                 DIRECTIVE 

REPTC                DIRECTIVE 

REPTI                DIRECTIVE 

REQUIRE              DIRECTIVE 

REQUIRE8             DIRECTIVE 

ROOT                 SEGMENT TYPE 

ROR                  MNEMONIC 

RRX                  MNEMONIC 

RSEG                 DIRECTIVE 

RTMODEL              DIRECTIVE 

S0                   REGISTER 

S1                   REGISTER 

S10                  REGISTER 

S11                  REGISTER 

S12                  REGISTER 

S13                  REGISTER 

S14                  REGISTER 

S15                  REGISTER 

S16                  REGISTER 

S17                  REGISTER 

S18                  REGISTER 

S19                  REGISTER 

S2                   REGISTER 

S20                  REGISTER 

S21                  REGISTER 

S22                  REGISTER 

S23                  REGISTER 

S24                  REGISTER 

S25                  REGISTER 

S26                  REGISTER 

S27                  REGISTER 

S28                  REGISTER 

S29                  REGISTER 

S3                   REGISTER 

S30                  REGISTER 
                                - ltp_cortexM3 -                      Page   14


S31                  REGISTER 

S4                   REGISTER 

S5                   REGISTER 

S6                   REGISTER 

S7                   REGISTER 

S8                   REGISTER 

S9                   REGISTER 

SBREL                OPERATOR 

SECTION              DIRECTIVE 

SECTION_GROUP        DIRECTIVE 

SECTION_LINK         DIRECTIVE 

SECTION_TYPE         DIRECTIVE 

SET                  DIRECTIVE 

SETA                 DIRECTIVE 

SFB                  OPERATOR 

SFE                  OPERATOR 

SFS                  OPERATOR 

SIZEOF               OPERATOR 

SORT                 SEGMENT TYPE 

SP                   REGISTER 

TABLE                DIRECTIVE 

THUMB                DIRECTIVE 

THUMBX               DIRECTIVE 

UGT                  OPERATOR 

ULT                  OPERATOR 

UNTYPED              SEGMENT TYPE 

VAR                  DIRECTIVE 

XDATA                SEGMENT TYPE 

XOR                  OPERATOR 

ZPAGE                SEGMENT TYPE 

[                    DELIMITER 

]                    DELIMITER 

^                    OPERATOR 

^                    DELIMITER 

__ARM4TM__           #define, value: 4, line:         0  

__ARM5TM__           #define, value: 5, line:         0  

__ARM5T__            #define, value: 5, line:         0  

__ARM5__             #define, value: 5, line:         0  

__ARM6MEDIA__        #define, value: 6, line:         0  
                                - ltp_cortexM3 -                      Page   15


__ARM6M__            #define, value: 11, line:         0  

__ARM6SM__           #define, value: 12, line:         0  

__ARM6T2__           #define, value: 6, line:         0  

__ARM6__             #define, value: 6, line:         0  

__ARM7EM__           #define, value: 13, line:         0  

__ARM7__             #define, value: 7, line:         0  

__ARMVFPV1__         #define, value: 1, line:         0  

__ARMVFPV2__         #define, value: 2, line:         0  

__ARMVFPV3_D16__     #define, value: 1, line:         0  

__ARMVFPV3_FP16__    #define, value: 1, line:         0  

__ARMVFPV3__         #define, value: 3, line:         0  

__ARMVFPV4__         #define, value: 4, line:         0  

__ARMVFP_D16__       #define, value: 1, line:         0  

__ARMVFP_FP16__      #define, value: 1, line:         0  

__ARMVFP_SP__        #define, value: 1, line:         0  

__ARMVFP__           #define, value: __ARMVFPV4__, line:         0  

__ARM_MEDIA__        #define, value: 1, line:         0  

__ARM_PROFILE_M__    #define, value: 1, line:         0  

__BUILD_NUMBER__     #define,            line:         0  

__CORE__             #define, value: __ARM7EM__, line:         0  

__DATE__             #define,            line:         0  

__FILE__             #define,            line:         0  

__IAR_SYSTEMS_ASM    #define,            line:         0  

__IAR_SYSTEMS_ASM__  #define,            line:         0  

__IASMARM__          #define, value: 1, line:         0  

__LINE__             #define,            line:         0  

__LITTLE_ENDIAN__    #define, value: 1, line:         0  

__SUBVERSION__       #define,            line:         0  

__TID__              #define,            line:         0  

__TIME__             #define,            line:         0  

__VER__              #define,            line:         0  

acc                  #define, value: R3, line:        40         58       61       61       64
                                                                       64       67       67       70
                                                                       70       71       73       76
                                                                       76       79       79       82
                                                                       82       85       85       86
                                                                       88       91       91       94
                                                                       94       97       97      100
                                                                      100      101      103      106
                                                                      106      109      109      112
                                                                      112      115      115      116
                                                                      118      121      121      124
                                                                      124      127      127      130
                                                                      130      131      133      136
                                                                      136      139      139      142
                                                                      142      145      145      146
                                - ltp_cortexM3 -                      Page   16

                                                                      148      151      151      154
                                                                      154      157      157      160
                                                                      160      161      163      166
                                                                      166      169      169      172
                                                                      172      175      175      176
                                                                      178      181      181      184
                                                                      184      187      187      190
                                                                      190      191      193      196
                                                                      196      199      199      202
                                                                      202      205      205      206

c                    #define, value: R1, line:        38         60       63       66       69
                                                                       75       78       81       84
                                                                       90       93       96       99
                                                                      105      108      111      114
                                                                      120      123      126      129
                                                                      135      138      141      144
                                                                      150      153      156      159
                                                                      165      168      171      174
                                                                      180      183      186      189
                                                                      195      198      201      204

c_0                  #define, value: R7, line:        44         60       61       66       67
                                                                       75       76       81       82
                                                                       90       91       96       97
                                                                      105      106      111      112
                                                                      120      121      126      127
                                                                      135      136      141      142
                                                                      150      151      156      157
                                                                      165      166      171      172
                                                                      180      181      186      187
                                                                      195      196      201      202

c_1                  #define, value: R8, line:        45         63       64       69       70
                                                                       78       79       84       85
                                                                       93       94       99      100
                                                                      108      109      114      115
                                                                      123      124      129      130
                                                                      138      139      144      145
                                                                      153      154      159      160
                                                                      168      169      174      175
                                                                      183      184      189      190
                                                                      198      199      204      205

define               PREPROCESSOR DIRECTIVE 

defined              Target symbol: 0 

elif                 PREPROCESSOR DIRECTIVE 

else                 PREPROCESSOR DIRECTIVE 

endif                PREPROCESSOR DIRECTIVE 

error                PREPROCESSOR DIRECTIVE 

if                   PREPROCESSOR DIRECTIVE 

ifdef                PREPROCESSOR DIRECTIVE 

ifndef               PREPROCESSOR DIRECTIVE 

include              PREPROCESSOR DIRECTIVE 

line                 PREPROCESSOR DIRECTIVE 

message              PREPROCESSOR DIRECTIVE 

pragma               PREPROCESSOR DIRECTIVE 

sum                  #define, value: R6, line:        41         54       71       71       86
                                                                       86      101      101      116
                                                                      116      131      131      146
                                                                      146      161      161      176
                                                                      176      191      191      206
                                                                      206      207

undef                PREPROCESSOR DIRECTIVE 
                                - ltp_cortexM3 -                      Page   17


x                    #define, value: R0, line:        37         59       62       65       68
                                                                       74       77       80       83
                                                                       89       92       95       98
                                                                      104      107      110      113
                                                                      119      122      125      128
                                                                      134      137      140      143
                                                                      149      152      155      158
                                                                      164      167      170      173
                                                                      179      182      185      188
                                                                      194      197      200      203

x_0                  #define, value: R4, line:        42         59       61       65       67
                                                                       74       76       80       82
                                                                       89       91       95       97
                                                                      104      106      110      112
                                                                      119      121      125      127
                                                                      134      136      140      142
                                                                      149      151      155      157
                                                                      164      166      170      172
                                                                      179      181      185      187
                                                                      194      196      200      202

x_1                  #define, value: R5, line:        43         62       64       68       70
                                                                       77       79       83       85
                                                                       92       94       98      100
                                                                      107      109      113      115
                                                                      122      124      128      130
                                                                      137      139      143      145
                                                                      152      154      158      160
                                                                      167      169      173      175
                                                                      182      184      188      190
                                                                      197      199      203      205

{                    DELIMITER 

|                    OPERATOR 

||                   OPERATOR 

}                    DELIMITER 

~                    OPERATOR 



Segment             Type 	Mode

----------------------------------------

.text               CODE  	REL 

__EXTERNS           CODE  	ABS Org:0 



Label               Mode   Type                   Segment    Value/Offset

------------------------------------------------------------------------------

??DUMMY_SYMBOL_IN_BACKEND_PARSED_OPERANDS
                    ABS    CONST UNTYP.           ASEG       1267 

Loop                REL    CONST UNTYP.           .text      9 

TID                 ABS    CONST UNTYP.           ASEG       4F00 

inner_prod          REL    CONST PUB UNTYP.       .text      1 





##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 574         #
##############################



